{"version":3,"sources":["components/Welcome/Welcome.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","supportFiles/helper.ts","sortingAlgorithms/BubbleSort.ts","sortingAlgorithms/SelectionSort.ts","sortingAlgorithms/InsertionSort.ts","sortingAlgorithms/QuickSort.ts","sortingAlgorithms/HeapSort.ts","sortingAlgorithms/MergeSort.ts","supportFiles/config.ts","supportFiles/store.ts","components/Visualizer/AlgoNavbar/AlgoNavbar.tsx","components/Visualizer/Paramters/Paramters.tsx","supportFiles/styles.ts","components/Visualizer/SortingSpace/SortingFiles/ArrayContainer.tsx","components/Visualizer/SortingSpace/SortingFiles/MergeContainer.tsx","components/Visualizer/SortingSpace/SortingFiles/InfoFooter.tsx","components/Visualizer/SortingSpace/SortingFiles/Timer.tsx","components/Visualizer/SortingSpace/SortingFiles/SortManager.tsx","components/Visualizer/SortingSpace/SortingSpace.tsx","components/Visualizer/Visualizer.tsx","App.tsx","index.tsx"],"names":["App","useState","show","setShow","useEffect","timer1","setTimeout","delay","clearTimeout","Fragment","style","fontSize","position","fontFamily","width","color","Navbar","id","top","left","right","display","href","target","rel","Footer","bottom","marginBottom","marginLeft","time","Promise","resolve","generateRandomNumberInRange","lowerLimit","upperLimit","Math","floor","random","array","swap","highlight","marksort","a","i","length","j","maxIndex","keyIndex","QuickSort","markSort","partition","low","high","pivot","maxHeap","max","highlightArray","arrLength","push","MergeSort","combine","merge","off1","off2","finalMerge","result","leftIndex","rightIndex","offSet","middle","slice","arr","comparisionColor","swapColor","sortedColor","sortingArray","window","innerWidth","sortingAlgorithms","component","title","name","useData","create","devtools","set","algorithm","setSortingArray","setAlgorithm","idx","useControls","progress","speed","compareTime","swapTime","doneCount","startSorting","pauseSorting","resetSorting","markSortngDone","state","getState","setSpeed","a11yProps","index","NavStyles","backgroundColor","overflow","paddingBottom","AlgoNavbar","topNav","document","getElementById","React","offsetHeight","setTop","shallow","addEventListener","AppBar","Tabs","value","onChange","event","TabIndicatorProps","textColor","variant","scrollButtons","justifyContent","height","map","Tab","label","key","flexGrow","fontWeight","Paramters","console","log","innerHeight","isPausing","setIsPausing","arrayInput","setArrayInput","startElement","onClick","className","order","paddingTop","pauseElement","resetElement","disabledPauseElement","getProgressButton","Slider","defaultValue","step","marks","min","alignSelf","Button","randomArray","Array","from","getRandomArray","TextField","arrayString","replaceAll","string","split","filter","v","arrayDataChangeHandler","size","margin","ArrayHolder","styled","div","ArrayItem","subscribe","Source","props","distance","keyframes","Destination","ArrayContainer","source","destination","highlightIndices","sortedIndices","getBackgroundColor","includes","AnimatedItem","MoveItem","MergeContainer","hightlightedIndices","items","setItems","newItems","temp","generateItems","borderRadius","transform","InfoFlex","InfoFooter","swapCount","comparisionCount","children","Timer","isAlgoExecutionOver","minutes","setMinutes","seconds","setSeconds","milliSeconds","setMilliSeconds","intervalId","setInterval","ml","clearInterval","toString","padStart","cTime","sTime","Container","Card","AlgoHeaderBar","TimerDiv","SortManager","memo","sortFunction","sortingAlgorithmName","swapIndices","setSwapIndices","setHightlightedIndices","algoArray","useRef","isComponentUnMounted","sortProgressIterator","reset","current","completion","done","next","tmp","indices","p","runAlgo","mergeContainer","arrayContainer","FlexWrap","TabPanel","other","role","hidden","maxWidth","SortingSpace","flexDirection","alignItems","alignContent","algoInfo","Visualizer","marginTop","textAlign","overflowX","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5c123438.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Welcome.scss\";\n\nconst delay = 3.1;\nexport default function App() {\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    let timer1 = setTimeout(() => setShow(true), delay * 1000);\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, []);\n\n  return show ? (\n    <React.Fragment></React.Fragment>\n  ) : (\n    <React.Fragment>\n      <h1\n        style={{\n          fontSize: \"clamp(2rem, 10vw, 8rem)\",\n          position: \"relative\",\n          fontFamily: \" Oxygen, system-ui, sans-serif\",\n          width: \"max-content\",\n          color: \"rgb(41, 41, 41)\",\n        }}\n      >\n        Welcome to <br /> SortingVisualizer\n      </h1>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"./Navbar.scss\";\n\nconst Navbar = () => {\n  return (\n    <nav id=\"TopNav\" style={{\n    top: \"0\",\n    left: \"0\",\n    right: \"0\",\n    position: \"absolute\",\n    display: \"flex\",\n    width: \"100vw\",\n  }}>\n      <a href=\"https://sayihhamza.github.io/SortingVisualizer/\" id=\"Sorting\">\n        SortingVisualizer\n      </a>\n      <div id=\"empty\"></div>\n      <a\n        href=\"https://github.com/sayihhamza/SortingVisualizer\"\n        target=\"_blank\"\n        id=\"Github\"\n        rel=\"noreferrer\"\n      >\n        GithubRepository\n      </a>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Footer.scss\";\nexport default function Footer() {\n  return (\n    <footer style={ {\n    bottom: \"0rem\",\n    position: \"absolute\",\n    display: \"inline-flex\",\n    marginBottom: \"1em\",\n    marginLeft: \"-5em\",\n  }}>\n      Made by&nbsp;\n      <a href=\"https://github.com/sayihhamza\" target=\"_blank\" rel=\"noreferrer\">\n        SAYIH Hamza\n      </a>\n    </footer>\n  );\n}\n","export function convertInputToArrayString(string:string) {\n  string = string.replaceAll(/\\s/g, \"\");\n  string = string.replaceAll(/\\d{3}/g, \"\");\n  string = string.replaceAll(/\\s\\s/g, \" \");\n  string = string.replaceAll(/\\s,/g, \",\");\n  string = string.replaceAll(/,,/g, \",\");\n  string = string.replaceAll(/[^0-9,\\s]/g, \"\");\n  return string;\n}\n\nexport function convertArrayStringToArray(string:string) {\n  return string\n    .split(\",\")\n    .filter((v) => v !== \"\")\n    .map((v) => +v);\n}\n\nexport function getRandomArray(length = generateRandomNumberInRange(6, 7)) {\n  return Array.from(new Array(length), () => generateRandomNumberInRange());\n}\n\nexport function getScreenWidth() {\n  return window.innerWidth;\n}\n\nexport function delay(time:number) {\n  return new Promise((resolve) => setTimeout(resolve, time));\n}\n\nfunction generateRandomNumberInRange(lowerLimit = 1, upperLimit = 99) {\n  return lowerLimit + Math.floor(Math.random() * upperLimit);\n}\n","export async function* BubbleSort(array:any, swap:any, highlight:any, marksort:any) {\n  for (let i = 0; i < array.length; i++) {\n    for (var j = 0; j < array.length - i - 1; j++) {\n      yield await highlight([j, j + 1]);\n      if (array[j] > array[j + 1]) {\n        yield await swap(j, j + 1);\n      }\n    }\n    marksort(j);\n    yield;\n  }\n}\n","export async function* SelectionSort(array:any, swap:any, highlight:any, marksort:any) {\n  for (let i = 0; i < array.length; i++) {\n    let maxIndex = 0;\n    for (var j = 0; j < array.length - i; j++) {\n      yield await highlight([maxIndex, j]);\n\n      if (array[maxIndex] < array[j]) {\n        maxIndex = j;\n      }\n    }\n\n    j = j - 1;\n    if (maxIndex !== j && array[maxIndex] !== array[j]) {\n      yield await swap(maxIndex, j);\n    }\n\n    marksort(j);\n    yield;\n  }\n}\n","export async function* InsertionSort(array:any, swap:any, highlight:any, marksort:any) {\n  for (let i = 0; i < array.length; i++) {\n    let keyIndex = i;\n    for (var j = i - 1; j >= 0; j--) {\n      yield await highlight([keyIndex, j]);\n\n      if (array[j] > array[keyIndex]) {\n        yield await swap(j, keyIndex);\n        keyIndex = j;\n      } else {\n        yield;\n        break;\n      }\n    }\n\n    marksort(i);\n    yield;\n  }\n}\n","export async function* QuickSort(\n  array:any,\n  swap:any,\n  highlight:any,\n  markSort:any,\n  low = 0,\n  high = array.length - 1\n):any {\n\n  if (low <= high) {\n    let pivot = yield* await partition(array, low, high);\n    yield* await QuickSort(array, swap, highlight, markSort, low, pivot - 1);\n    yield* await QuickSort(array, swap, highlight, markSort, pivot + 1, high);\n  }\n\n  async function* partition(array:any, low:any, high:any) {\n    let pivot = low;\n    let i = low;\n    let j = high + 1;\n\n    while (i < j) {\n\n      while (--j > low) {\n        yield await highlight([i, j], pivot);\n        if (array[j] < array[pivot]) {\n          break;\n        }\n      }\n\n      while (i <= high && i < j) {\n        yield await highlight([i], pivot);\n        if (array[++i] > array[pivot]) {\n          break;\n        }\n      }\n\n      if (i < j) {\n        yield await swap(i, j);\n      }\n    }\n\n    if (pivot !== j) {\n      yield await swap(pivot, j);\n    }\n\n    markSort(j);\n    yield;\n    return j;\n  }\n}\n","export async function* HeapSort(array:any, swap:any, highlight:any, markSort:any) {\n  let arrLength = array.length;\n  for (let i = Math.floor(arrLength / 2) - 1; i >= 0; i--) {\n    yield* await maxHeap(i);\n  }\n  for (let i = array.length - 1; i > 0; i--) {\n    arrLength--;\n    markSort(arrLength);\n    yield await swap(0, i);\n    yield* await maxHeap(0);\n  }\n  markSort(0);\n  async function* maxHeap(i:any):any {\n    const left = 2 * i + 1;\n    const right = 2 * i + 2;\n    let max = i;\n\n    const highlightArray = [];\n    if(left < arrLength)\n      highlightArray.push(left);\n    if(right < arrLength)\n      highlightArray.push(right);\n    yield await highlight(highlightArray, i);\n\n    if(left < arrLength){\n      if (array[left] > array[max]) {\n        max = left;\n      }\n    }\n\n    if(right < arrLength){\n      if (array[right] > array[max]) {\n        max = right;\n      }\n    }\n\n    if (max !== i) {\n      yield await swap(i, max);\n      yield* await maxHeap(max);\n    }\n  }\n}\n","export async function* MergeSort(\n  array: any,\n  combine: any,\n  highlight: any,\n  markSort: any,\n  offSet = 0,\n  finalMerge = true\n): any {\n  if (array.length === 1) {\n    if (finalMerge) markSort(0);\n    return array;\n  }\n\n  const middle = Math.floor(array.length / 2);\n  const left = array.slice(0, middle);\n  const right = array.slice(middle);\n\n  const arr: any = yield* await merge(\n    yield* await MergeSort(left, combine, highlight, markSort, offSet, false),\n    yield* await MergeSort(\n      right,\n      combine,\n      highlight,\n      markSort,\n      offSet + middle,\n      false\n    ),\n    offSet,\n    offSet + middle,\n    finalMerge,\n    markSort\n  );\n  return arr;\n\n  async function* merge(\n    left: any,\n    right: any,\n    off1: any,\n    off2: any,\n    finalMerge = false,\n    markSort: any\n  ) {\n    let result = [];\n    let leftIndex = 0;\n    let rightIndex = 0;\n\n    while (leftIndex < left.length && rightIndex < right.length) {\n      if (left[leftIndex] <= right[rightIndex]) {\n        yield await highlight([\n          off1 + leftIndex + rightIndex,\n          off2 + rightIndex,\n        ]);\n        yield await combine(\n          off1 + leftIndex + rightIndex,\n          off1 + result.length\n        );\n        if (finalMerge) yield await markSort(off1 + result.length);\n        result.push(left[leftIndex]);\n        leftIndex++;\n      } else {\n        yield await highlight([\n          off1 + leftIndex + rightIndex,\n          off2 + rightIndex,\n        ]);\n        yield await combine(off2 + rightIndex, off1 + result.length);\n        if (finalMerge) yield await markSort(off1 + result.length);\n        result.push(right[rightIndex]);\n        rightIndex++;\n      }\n    }\n\n    while (leftIndex < left.length) {\n      yield await highlight([off1 + leftIndex + rightIndex]);\n      if (finalMerge) yield await markSort(off1 + leftIndex + rightIndex);\n      result.push(left[leftIndex]);\n      leftIndex++;\n    }\n\n    while (rightIndex < right.length) {\n      yield await highlight([off1 + leftIndex + rightIndex]);\n      if (finalMerge) yield await markSort(off1 + leftIndex + rightIndex);\n      result.push(right[rightIndex]);\n      rightIndex++;\n    }\n\n    return result;\n  }\n}\n","import { getScreenWidth } from \"./helper\";\nimport { BubbleSort } from \"../sortingAlgorithms/BubbleSort\";\nimport { SelectionSort } from \"../sortingAlgorithms/SelectionSort\";\nimport { InsertionSort } from \"../sortingAlgorithms/InsertionSort\";\nimport { QuickSort } from \"../sortingAlgorithms/QuickSort\";\nimport { HeapSort } from \"../sortingAlgorithms/HeapSort\";\nimport { MergeSort } from \"../sortingAlgorithms/MergeSort\";\n\n// colors setting\nexport const comparisionColor = \"#99CCFF\";\nexport const swapColor = \"#FFFF66\";\nexport const sortedColor = \"#99FF99\";\nexport const pivotColor = \"#FF6666\";\n\n// time setting\nexport let swapTime = 1000;\nexport let compareTime = 500;\n\n// init array\nexport let sortingArray = () => {\n  const screenSize = getScreenWidth();\n  if (screenSize < 460) return [];\n  return [];\n};\n\nexport const sortingAlgorithms = [\n  { component: QuickSort, title: \"Quick\", name: \"QuickSort\" },\n  { component: InsertionSort, title: \"Insertion\", name: \"InsertionSort\" },\n  { component: SelectionSort, title: \"Selection\", name: \"SelectionSort\" },\n  { component: BubbleSort, title: \"Bubble\", name: \"BubbleSort\" },\n  { component: MergeSort, title: \"Merge\", name: \"MergeSort\" },\n  { component: HeapSort, title: \"Heap\", name: \"HeapSort\" },\n];\n","import create from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport {\n  sortingArray,\n  compareTime,\n  swapTime,\n  sortingAlgorithms,\n} from \"./config\";\n\nexport const useData:any = create(\n  devtools((set) => ({\n    algorithm: 0,\n    sortingArray: sortingArray,\n    setSortingArray: (array:any) => set({ sortingArray: array }),\n    setAlgorithm: (idx:any) => set({ algorithm: idx }),\n  }))\n);\n\nexport const useControls:any = create(\n  devtools((set) => ({\n    progress: \"reset\",\n    speed: 3,\n    compareTime: compareTime,\n    swapTime: swapTime,\n    doneCount: 0,\n    startSorting: () => set({ progress: \"start\" }),\n    pauseSorting: () => set({ progress: \"pause\" }),\n    resetSorting: () => set({ progress: \"reset\", doneCount: 0 }),\n    markSortngDone: () =>\n      set((state:any) => {\n        if (useData.getState().algorithm === sortingAlgorithms.length) {\n          if (state.doneCount === sortingAlgorithms.length - 1)\n            return { doneCount: 0, progress: \"done\" };\n          else return { doneCount: state.doneCount + 1 };\n        } else return { progress: \"done\" };\n      }),\n    setSpeed: (speed:any) =>\n      set(() => {\n        return { swapTime: 3000 / speed, compareTime: 1500 / speed, speed };\n      }),\n  }))\n);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { sortingAlgorithms } from \"../../../supportFiles/config\";\nimport { useData } from \"../../../supportFiles/store\";\nimport shallow from \"zustand/shallow\";\n\nfunction a11yProps(index: number) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst NavStyles: any = {\n  position: \"absolute\",\n  width: \"100vw\",\n  left: \"0\",\n  right: \"0\",\n  backgroundColor: \"rgb(211, 211, 211)\",\n  display: \"inline-flex\",\n  overflow: \"auto\",\n  marginBottom: \"0\",\n  paddingBottom: \"0\",\n};\n\nconst AlgoNavbar = () => {\n  const topNav: any = document.getElementById(\"TopNav\");\n  const [, setTop] = React.useState(topNav.offsetHeight);\n  const [algorithm, setAlgorithm] = useData(\n    (state: any) => [state.algorithm, state.setAlgorithm],\n    shallow\n  );\n\n  window.addEventListener(\"resize\", () => {\n    setTop(topNav.offsetHeight);\n  });\n\n  return (\n    <div style={{ fontFamily: \" Oxygen, system-ui, sans-serif !important\" }}>\n      <nav id=\"AlgoNavbar\" color=\"grey\" style={NavStyles}>\n        <AppBar position=\"static\" color=\"transparent\">\n          <Tabs\n            value={algorithm}\n            onChange={(event, id) => setAlgorithm(id)}\n            TabIndicatorProps={{\n              style: {\n                backgroundColor: \"transparent\",\n              },\n            }}\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n            style={{\n              backgroundColor: \"rgb(211, 211, 211)\",\n              display: \"inline-flex\",\n              justifyContent: \"center\",\n              height: \"3vh\",\n            }}\n          >\n            {sortingAlgorithms.map((algorithm: any) => (\n              <Tab\n                label={algorithm.title}\n                {...a11yProps(0)}\n                key={algorithm.title}\n                style={{\n                  flexGrow: 1,\n                  fontWeight: \"bold\",\n                  fontSize: \"1.3em\",\n                  color: \"rgb(27, 27, 27)\",\n                }}\n              />\n            ))}\n            <Tab\n              label=\"All\"\n              {...a11yProps(6)}\n              style={{\n                flexGrow: 1,\n                fontWeight: \"bold\",\n                fontSize: \"1.3em\",\n                color: \"rgb(27, 27, 27)\",\n              }}\n            />\n          </Tabs>\n        </AppBar>\n      </nav>\n    </div>\n  );\n};\n\nexport default AlgoNavbar;\n","import React, { useState } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./Paramters.scss\";\n\nimport { delay } from \"../../../supportFiles/helper\";\n\nimport shallow from \"zustand/shallow\";\nimport { useControls, useData } from \"../../../supportFiles/store\";\nimport {\n  convertInputToArrayString,\n  convertArrayStringToArray,\n  getRandomArray,\n} from \"../../../supportFiles/helper\";\n\nimport { VscDebugStart } from \"react-icons/vsc\";\nimport { VscDebugRestart } from \"react-icons/vsc\";\nimport { ImPause } from \"react-icons/im\";\n\n// const startElement = <VscDebugStart />;\n// const pauseElement = <ImPause />;\n// const resetElement = <VscDebugRestart />;\n// const disabledPauseElement = <ImPause style={{ color: \"#e5e5e5\" }} />;\n\nconst Paramters = () => {\n  window.addEventListener(\"resize\", () => {\n    console.log(\"width : \" + window.innerWidth);\n    console.log(\"height : \" + window.innerHeight);\n  });\n  const [isPausing, setIsPausing] = useState(false);\n  const [progress, speed] = useControls(\n    (state:any) => [state.progress, state.speed],\n    shallow\n  );\n\n  const [sortingArray, setSortingArray] = useData(\n    (state:any) => [state.sortingArray, state.setSortingArray],\n    shallow\n  );\n\n  const [startSorting, pauseSorting, resetSorting, setSpeed] = useControls(\n    (state:any) => [\n      state.startSorting,\n      state.pauseSorting,\n      state.resetSorting,\n      state.setSpeed,\n    ],\n    shallow\n  );\n\n  const [arrayInput, setArrayInput] = useState(sortingArray);\n\n  const startElement = (\n    <VscDebugStart\n      onClick={startSorting}\n      className=\"icns\"\n      style={{\n        height: \"6vh\",\n        width: \"6vw\",\n        left: \"0\",\n        order: 0,\n        paddingTop: \"0.3em\",\n      }}\n    />\n  );\n  const pauseElement = (\n    <ImPause\n      onClick={pauseAndDelaySorting}\n      className=\"icns\"\n      style={{\n        height: \"6vh\",\n        width: \"6vw\",\n        left: \"0\",\n        order: 0,\n        paddingTop: \"0.3em\",\n      }}\n    />\n  );\n  const resetElement = (\n    <VscDebugRestart\n      onClick={resetSorting}\n      className=\"icns\"\n      style={{\n        height: \"6vh\",\n        width: \"6vw\",\n        left: \"0\",\n        order: 0,\n        paddingTop: \"0.3em\",\n      }}\n    />\n  );\n  const disabledPauseElement = (\n    <ImPause\n      className=\"icns\"\n      style={{\n        color: \"rgb(100, 100, 100)\",\n        height: \"6vh\",\n        width: \"6vw\",\n        left: \"0\",\n        order: 0,\n        paddingTop: \"0.3em\",\n      }}\n    />\n  );\n\n  async function pauseAndDelaySorting() {\n    pauseSorting();\n    setIsPausing(true);\n    await delay(useControls.getState().swapTime);\n    setIsPausing(false);\n  }\n\n  function arrayDataChangeHandler(value:any) {\n    const arrayString = convertInputToArrayString(value);\n    setArrayInput(arrayString);\n\n    const array = convertArrayStringToArray(arrayString);\n    setSortingArray(array);\n    resetSorting();\n  }\n\n  function generate() {\n    const randomArray = getRandomArray();\n    setArrayInput(randomArray);\n    setSortingArray(randomArray);\n    resetSorting();\n  }\n\n  function getProgressButton() {\n    if (isPausing) return disabledPauseElement;\n\n    switch (progress) {\n      case \"reset\":\n        return startElement;\n      case \"start\":\n        return pauseElement;\n      case \"pause\":\n        return startElement;\n      case \"done\":\n        return disabledPauseElement;\n      default:\n        return \"\";\n    }\n  }\n  return (\n    <div id=\"Parent\">\n      <div id=\"Element1\" style={{ display: \"flex\" }}>\n        {getProgressButton()}\n        {resetElement}\n        <Slider\n          key={`slider-${speed}`}\n          defaultValue={speed}\n          onChange={(event, value) => setSpeed(value)}\n          id=\"Slider\"\n          aria-labelledby=\"discrete-slider\"\n          step={1}\n          marks\n          min={1}\n          max={10}\n          style={{\n            order: 2,\n            width: \"70%\",\n            alignSelf: \"center\",\n            marginLeft: \"0.5em\",\n            paddingTop: \"0.8em\",\n            color: \"rgb(24, 24, 24)\",\n          }}\n        ></Slider>\n      </div>\n      <div id=\"Element2\" style={{ display: \"flex\" }}>\n        <Button\n          id=\"Generate\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={generate}\n          style={{\n            order:3,\n            marginLeft: \"2em\",\n            height: \"3em\",\n            backgroundColor: \"rgb(24, 24, 24)\",\n          }}\n        >\n          Generate\n        </Button>\n        <TextField\n          id=\"outlined-basic\"\n          onChange={(event) => arrayDataChangeHandler(event.target.value)}\n          value={arrayInput}\n          label=\"Input\"\n          variant=\"outlined\"\n          size=\"small\"\n          style={{ margin: \"0 10px\", order: 4, width: \"70%\" }}\n        ></TextField>\n      </div>\n    </div>\n  );\n};\n\nexport default Paramters;\n","import styled, { keyframes } from \"styled-components\";\n\nexport const ArrayHolder = styled.div`\n  display: flex;\n  height: 175px;\n  align-items: center;\n  padding: 15px;\n  overflow: auto;\n`;\n\nexport const ArrayItem = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid black;\n  width: 50px;\n  height: 50px;\n  box-shadow: 0 5px 30px 0 rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  flex-shrink: 0;\n`;\n\nexport const swapAnimation = (distance:number, swapColor:string) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  10%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  30% {\n    transform: translate(0px, -50px);\n    background-color: ${swapColor};\n  }\n  70% {\n    transform: translate(-${distance * 50}px, -50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(-${distance * 50}px, 0px);\n  }\n`;\n\nexport const moveAnimation = () => keyframes`\n  0%{\n    transform: translate(0px, 0px);\n  }\n  100%{\n    transform: translate(50px, 0px);\n  }\n`;\n\nexport const destinationAnimation = (distance:number, swapColor:string) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  40%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  60% {\n    transform: translate(0px, 50px);\n    background-color: ${swapColor};\n  }\n  80% {\n    transform: translate(-${distance * 50}px, 50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: none;\n  }\n`;\n\nexport const sourceAnimation = (distance:number, swapColor:string) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  40%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  60% {\n    transform: translate(0px, -50px);\n    background-color: ${swapColor};\n  }\n  80% {\n    transform: translate(${distance * 50}px, -50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(${distance * 50}px, 0px);\n    background-color: none;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  comparisionColor,\n  swapColor,\n  sortedColor,\n  pivotColor,\n} from \"../../../../supportFiles/config\";\nimport { useControls } from \"../../../../supportFiles/store\";\n\nimport {\n  ArrayHolder,\n  ArrayItem,\n  sourceAnimation,\n  destinationAnimation,\n} from \"../../../../supportFiles/styles\";\n\nlet swapTime:any = useControls.getState().swapTime;\nuseControls.subscribe(\n  (time:any) => (swapTime = time),\n  (state:any) => state.swapTime\n);\n\nconst Source:any = styled(ArrayItem)`\n  animation: ${(props:any) => destinationAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nconst Destination:any = styled(ArrayItem)`\n  animation: ${(props:any) => sourceAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nexport function ArrayContainer({\n  array,\n  source,\n  destination,\n  pivot = -1,\n  highlightIndices,\n  sortedIndices,\n}:any) {\n  function getBackgroundColor(i:any) {\n    if (i === pivot) {\n      return pivotColor;\n    }\n\n    if (highlightIndices.includes(i)) {\n      return comparisionColor;\n    }\n\n    if (sortedIndices.includes(i)) {\n      return sortedColor;\n    }\n    return \"\";\n  }\n\n  return (\n    <ArrayHolder>\n      {array.map((value:any, i:any) => {\n        if (i === source) {\n          return (\n            <Source\n              key={i + \":\" + source + \":\" + destination + \":\" + value}\n              distance={destination - source}\n              style={{\n                order: destination,\n                backgroundColor: getBackgroundColor(i),\n                fontSize: \"1.5em\",\n                height: \"10vh\",\n              }}\n            >\n              <strong>{value}</strong>\n            </Source>\n          );\n        }\n        if (i === destination) {\n          return (\n            <Destination\n              key={i + \":\" + destination + \":\" + source + \":\" + value}\n              distance={destination - source}\n              style={{\n                order: source,\n                backgroundColor: getBackgroundColor(i),\n                fontSize: \"1.5em\",\n                height: \"10vh\",\n              }}\n            >\n              <strong>{value}</strong>\n            </Destination>\n          );\n        }\n        return (\n          <ArrayItem\n            key={i + \":\" + destination + \":\" + source + \":\" + value}\n            style={{\n              order: i,\n              backgroundColor: getBackgroundColor(i),\n              fontSize: \"1.5em\",\n              height: \"10vh\",\n            }}\n          >\n            <strong>{value}</strong>\n          </ArrayItem>\n        );\n      })}\n    </ArrayHolder>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  comparisionColor,\n  swapColor,\n  sortedColor,\n} from \"../../../../supportFiles/config\";\nimport {\n  ArrayHolder,\n  ArrayItem,\n  swapAnimation,\n  moveAnimation,\n} from \"../../../../supportFiles/styles\";\nimport { useControls } from \"../../../../supportFiles/store\";\n\nlet swapTime = useControls.getState().swapTime;\nuseControls.subscribe(\n  (time:any) => (swapTime = time),\n  (state:any) => state.swapTime\n);\n\nconst AnimatedItem:any = styled(ArrayItem)`\n  animation: ${(props:any) => swapAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nconst MoveItem:any = styled(ArrayItem)`\n  animation: ${moveAnimation()} ${() => swapTime / 1000}s forwards;\n`;\n\nconst generateItems:any = (setItems:any, source:any, destination:any) => {\n  setItems((items:any) => {\n    const newItems = [...items];\n\n    const temp = newItems[source];\n    for (let i = source; i > destination; i--) {\n      newItems[i] = newItems[i - 1];\n    }\n\n    newItems[destination] = temp;\n    return newItems;\n  });\n};\n\nexport function MergeContainer({\n  array,\n  source,\n  destination,\n  hightlightedIndices,\n  sortedIndices,\n}:any) {\n  const [items, setItems] = useState([...array]);\n\n  useEffect(() => {\n    if (source !== -1 && destination !== -1) {\n      generateItems(setItems, source, destination);\n    }\n  }, [source, destination]);\n\n  useEffect(() => {\n    setItems([...array]);\n  }, [array]);\n\n  function getBackgroundColor(i:any) {\n    if (sortedIndices.includes(i)) {\n      return sortedColor;\n    }\n\n    if (hightlightedIndices.includes(i)) {\n      return comparisionColor;\n    }\n\n    return \"\";\n  }\n\n  return (\n    <>\n      <ArrayHolder>\n        {items.map((value:any, i:any) => {\n          if (i === destination) {\n            return (\n              <AnimatedItem\n                key={i + \":\" + value}\n                style={{\n                  order: source + 1,\n                  backgroundColor: getBackgroundColor(i),\n                  borderRadius: \"2px\",\n                  fontSize: \"1.5em\",\n                  height: \"10vh\",\n                }}\n                distance={source - destination}\n              >\n                <strong>{value}</strong>\n              </AnimatedItem>\n            );\n          } else if (i > destination && i <= source) {\n            return (\n              <MoveItem\n                key={i + \":\" + value}\n                style={{\n                  order: i,\n                  backgroundColor: getBackgroundColor(i),\n                  transform: \"translate(50px)\",\n                  fontSize: \"1.5em\",\n                  height: \"10vh\",\n                }}\n              >\n                <strong>{value}</strong>\n              </MoveItem>\n            );\n          } else {\n            return (\n              <ArrayItem\n                key={i + \":\" + value}\n                style={{\n                  order: i,\n                  backgroundColor: getBackgroundColor(i),\n                  fontSize: \"1.5em\",\n                  height: \"10vh\",\n                }}\n              >\n                <strong>{value}</strong>\n              </ArrayItem>\n            );\n          }\n        })}\n      </ArrayHolder>\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InfoFlex = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport function InfoFooter({ swapCount, comparisionCount, children }:any) {\n  return (\n    <InfoFlex>\n      <div>\n        Swaps: <strong>{swapCount}</strong>\n      </div>\n      <div>\n        Comparisions: <strong>{comparisionCount}</strong>\n      </div>\n    </InfoFlex>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useControls } from \"../../../../supportFiles/store\";\n\nexport function Timer({ isAlgoExecutionOver }:any) {\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [milliSeconds, setMilliSeconds] = useState(0);\n\n  const progress = useControls((state:any) => state.progress);\n\n  function resetTimer() {\n    setMilliSeconds(0);\n    setSeconds(0);\n    setMinutes(0);\n  }\n\n  useEffect(() => {\n    if (isAlgoExecutionOver) return;\n    if (progress === \"start\")\n      var intervalId = setInterval(() => setMilliSeconds((ml) => ml + 1), 100);\n    else if (progress === \"reset\") resetTimer();\n    return () => clearInterval(intervalId);\n  }, [progress, isAlgoExecutionOver]);\n\n  useEffect(() => {\n    if (milliSeconds === 10) {\n      setSeconds((seconds) => seconds + 1);\n      setMilliSeconds(0);\n    }\n  }, [milliSeconds]);\n\n  useEffect(() => {\n    if (seconds === 60) {\n      setMinutes((minutes) => minutes + 1);\n      setSeconds(0);\n    }\n  }, [seconds]);\n  return(\n    <div>\n      {`${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}:${milliSeconds} s`}\n    </div>);\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ArrayContainer } from \"./ArrayContainer\";\nimport { MergeContainer } from \"./MergeContainer\";\nimport { InfoFooter } from \"./InfoFooter\";\nimport { Timer } from \"./Timer\";\nimport Card from \"@material-ui/core/Card\";\nimport { delay } from \"../../../../supportFiles/helper\";\nimport shallow from \"zustand/shallow\";\nimport { useControls, useData } from \"../../../../supportFiles/store\";\n\nlet compareTime = useControls.getState().compareTime;\nlet swapTime = useControls.getState().swapTime;\n\nuseControls.subscribe(\n  ([cTime, sTime]:any) => {\n    compareTime = cTime;\n    swapTime = sTime;\n  },\n  (state:any) => [state.compareTime, state.swapTime],\n  shallow\n);\n\nconst Container:any = styled(Card)`\n  padding: 10px;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n`;\n\nconst AlgoHeaderBar:any = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 20px;\n`;\n\nconst TimerDiv:any = styled.div`\n  display: flex;\n  column-gap: 5px;\n  min-width: 8rem;\n  justify-content: flex-end;\n`;\n\nexport const SortManager = React.memo(function ({\n  array,\n  sortFunction,\n  sortingAlgorithmName,\n}:any) {\n  const [swapIndices, setSwapIndices] = useState([-1, -1]);\n  const [hightlightedIndices, setHightlightedIndices] = useState([-1, -1]);\n\n  const algoArray:any = useRef([]);\n  const sortedIndices:any = useRef([]);\n  const pivot:any = useRef(-1);\n  const swapCount:any = useRef(0);\n  const comparisionCount:any = useRef(0);\n  const isAlgoExecutionOver:any = useRef(false);\n  const isComponentUnMounted:any = useRef(false);\n\n  const markSortngDone:any = useControls((state:any) => state.markSortngDone);\n  const progress:any = useRef(\"\");\n  const sortProgressIterator:any = useRef(null);\n\n  async function reset() {\n    algoArray.current = [...useData.getState().sortingArray];\n    sortedIndices.current = [];\n    pivot.current = -1;\n    swapCount.current = 0;\n    comparisionCount.current = 0;\n    isAlgoExecutionOver.current = false;\n    setSwapIndices([-1, -1]);\n    setHightlightedIndices([-1, -1]);\n\n    sortProgressIterator.current =\n      sortingAlgorithmName === \"MergeSort\"\n        ? await sortFunction(algoArray.current, combine, highlight, markSort)\n        : await sortFunction(algoArray.current, swap, highlight, markSort);\n  }\n\n  useEffect(() => {\n    progress.current = useControls.getState().progress;\n    useControls.subscribe(\n      (value:any) => {\n        progress.current = value;\n\n        if (progress.current === \"start\") runAlgo();\n        if (progress.current === \"reset\") reset();\n      },\n      (state:any) => state.progress\n    );\n\n    return () => {\n      isComponentUnMounted.current = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    reset();\n  }, [array]);\n\n  async function runAlgo() {\n    let completion = { done: false };\n    while (\n      !completion?.done &&\n      progress.current === \"start\" &&\n      !isComponentUnMounted.current\n    ) {\n      completion = await sortProgressIterator.current?.next();\n    }\n\n    if (isComponentUnMounted.current) {\n      return;\n    }\n\n    if (!isAlgoExecutionOver.current && completion?.done) {\n      isAlgoExecutionOver.current = true;\n      pivot.current = -1;\n      setSwapIndices([-1, -1]);\n      setHightlightedIndices([-1, -1]);\n      markSortngDone();\n    }\n  }\n\n  async function swap(i:any, j:any) {\n    let tmp = algoArray.current[i];\n    algoArray.current[i] = algoArray.current[j];\n    algoArray.current[j] = tmp;\n    setSwapIndices([i, j]);\n\n    pivot.current = -1;\n    swapCount.current += 1;\n    await delay(swapTime);\n  }\n\n  async function combine(source:any, destination:any) {\n    if (source !== destination) {\n      swapCount.current += 1;\n      setHightlightedIndices([-1, -1]);\n      setSwapIndices([source, destination]);\n      await delay(swapTime);\n    }\n  }\n\n  async function highlight(indices:any, p:any) {\n    setSwapIndices([-1, -1]);\n    comparisionCount.current += 1;\n    pivot.current = p;\n    setHightlightedIndices(indices);\n    await delay(compareTime);\n  }\n\n  function markSort(...indices:any) {\n    sortedIndices.current.push(...indices);\n  }\n\n  const mergeContainer = (\n    <MergeContainer\n      array={algoArray.current}\n      source={swapIndices[0]}\n      destination={swapIndices[1]}\n      hightlightedIndices={hightlightedIndices}\n      sortedIndices={sortedIndices.current}\n    />\n  );\n  const arrayContainer = (\n    <ArrayContainer\n      array={algoArray.current}\n      source={swapIndices[0]}\n      destination={swapIndices[1]}\n      pivot={pivot.current}\n      highlightIndices={hightlightedIndices}\n      sortedIndices={sortedIndices.current}\n    />\n  );\n\n  return (\n    <Container style={{ backgroundColor: \"gainsboro\", margin: \"0 !important\" }}>\n      <AlgoHeaderBar>\n        <strong>{sortingAlgorithmName}</strong>\n        <TimerDiv>\n          <span>Time:</span>\n          <strong>\n            <Timer isAlgoExecutionOver={isAlgoExecutionOver.current} />\n          </strong>\n        </TimerDiv>\n      </AlgoHeaderBar>\n      {sortingAlgorithmName === \"MergeSort\" ? mergeContainer : arrayContainer}\n      <InfoFooter\n        swapCount={swapCount.current}\n        comparisionCount={comparisionCount.current}\n      ></InfoFooter>\n    </Container>\n  );\n});\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { sortingAlgorithms } from \"../../../supportFiles/config\";\nimport { useControls, useData } from \"../../../supportFiles/store\";\nimport shallow from \"zustand/shallow\";\nimport { SortManager } from \"./SortingFiles/SortManager\";\n\nconst FlexWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center !important;\n  max-width: 100%;\n  column-gap: 10px;\n  row-gap: 10px;\n`;\n\nfunction TabPanel(props:any) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n      style={{ maxWidth: \"100%\" }}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\nexport function SortingSpace() {\n  const resetSorting = useControls((state:any) => state.resetSorting);\n\n  const [sortingArray, algorithm] = useData(\n    (state:any) => [state.sortingArray, state.algorithm],\n    shallow\n  );\n\n  useEffect(() => {\n    resetSorting();\n  }, [algorithm, resetSorting]);\n\n  if (sortingArray.length === 0)\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100vw\",\n        }}\n      >\n        <h2 style={{ justifyContent: \"center\" }}>\n          1) Please use the generate button or enter your custom input.\n        </h2>\n        <br />\n        <h2 style={{ justifyContent: \"center\" }}>\n          2) Then select one ( or all ) of the sorting algorithms listed above.\n        </h2>\n        <br />\n        <h2 style={{ justifyContent: \"center\" }}>\n          3) Click the start button to begin visualizing.\n        </h2>\n      </div>\n    );\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        flexDirection: \"column\",\n        width: \"100vw\",\n      }}\n    >\n      <div>\n        {sortingAlgorithms.map((algoInfo:any, idx:any) => (\n          <TabPanel value={algorithm} index={idx} key={algoInfo.name}>\n            <SortManager\n              array={sortingArray}\n              sortFunction={algoInfo.component}\n              sortingAlgorithmName={algoInfo.name}\n            />\n          </TabPanel>\n        ))}\n        <TabPanel value={algorithm} index={sortingAlgorithms.length}>\n          <FlexWrap>\n            {sortingAlgorithms.map((algoInfo:any) => (\n              <SortManager\n                array={sortingArray}\n                sortFunction={algoInfo.component}\n                sortingAlgorithmName={algoInfo.name}\n                key={algoInfo.name}\n              />\n            ))}\n          </FlexWrap>\n        </TabPanel>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport AlgoNavbar from \"./AlgoNavbar/AlgoNavbar\";\nimport Paramters from \"./Paramters/Paramters\";\nimport { SortingSpace } from \"./SortingSpace/SortingSpace\";\nimport \"./Visualizer.scss\";\nconst delay = 3.3;\nexport default function Visualizer() {\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    let timer1 = setTimeout(() => setShow(true), delay * 1000);\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, []);\n  const VisualizerStyles:any = {\n    position: \"static\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"86vh\",\n  };\n  const ParamtersStyles:any = {\n    display: \"inline-flex\",\n    order: \"1\",\n    width: \"100vw\",\n    marginTop: \"clamp(3.9rem, 5vw, 4.2rem)\",\n    textAlign: \"center\",\n  };\n  const SortingSpaceStyles:any = {\n    order: \"2\",\n    width: \"100vw\",\n    height: \"80vh\",\n    position: \"relative\",\n    overflowX: \"hidden\",\n  };\n  return show ? (\n    <React.Fragment>\n      <div id=\"Visualizer\" style={VisualizerStyles}>\n        <AlgoNavbar />\n        <div style={ParamtersStyles}>\n          <Paramters />\n        </div>\n        <div style={SortingSpaceStyles}>\n          <SortingSpace />\n        </div>\n      </div>\n    </React.Fragment>\n  ) : (\n    <React.Fragment></React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Welcome from \"./components/Welcome/Welcome\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Visualizer from \"./components/Visualizer/Visualizer\";\nimport \"./App.scss\";\n\nexport default function App() {\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Visualizer />\n      <Welcome />\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}