{"version":3,"sources":["components/Welcome/Welcome.js","components/Navbar/Navbar.js","components/Footer/Footer.js","supportFiles/helper.js","sortingAlgorithms/BubbleSort.js","sortingAlgorithms/SelectionSort.js","sortingAlgorithms/InsertionSort.js","sortingAlgorithms/QuickSort.js","sortingAlgorithms/HeapSort.js","sortingAlgorithms/MergeSort.js","supportFiles/config.js","supportFiles/store.js","components/Visualizer/AlgoNavbar/AlgoNavbar.js","components/Visualizer/Paramters/Paramters.js","supportFiles/styles.js","components/Visualizer/SortingSpace/SortingFiles/ArrayContainer.js","components/Visualizer/SortingSpace/SortingFiles/MergeContainer.js","components/Visualizer/SortingSpace/SortingFiles/InfoFooter.js","components/Visualizer/SortingSpace/SortingFiles/Timer.js","components/Visualizer/SortingSpace/SortingFiles/SortManager.js","components/Visualizer/SortingSpace/SortingSpace.js","components/Visualizer/Visualizer.js","App.js","index.js"],"names":["headerStyles","fontSize","position","fontFamily","width","color","App","useState","show","setShow","useEffect","timer1","setTimeout","delay","clearTimeout","Fragment","style","Navbar","id","top","left","right","marginTop","display","href","target","rel","Footer","bottom","marginBottom","marginLeft","time","Promise","resolve","generateRandomNumberInRange","lowerLimit","upperLimit","Math","floor","random","array","swap","highlight","marksort","a","i","length","j","maxIndex","keyIndex","QuickSort","markSort","partition","low","high","pivot","maxHeap","max","highlightArray","arrLength","push","MergeSort","combine","merge","off1","off2","finalMerge","result","leftIndex","rightIndex","offSet","middle","slice","arr","comparisionColor","swapColor","sortedColor","sortingArray","window","innerWidth","sortingAlgorithms","component","title","name","useControls","create","devtools","set","progress","speed","compareTime","swapTime","doneCount","startSorting","pauseSorting","resetSorting","markSortngDone","state","useData","getState","algorithm","setSpeed","setSortingArray","setAlgorithm","idx","a11yProps","index","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavStyles","overflow","paddingBottom","AlgoNavbar","topNav","document","getElementById","React","offsetHeight","setTop","shallow","addEventListener","AppBar","Tabs","value","onChange","event","indicatorColor","textColor","variant","scrollButtons","justifyContent","height","map","Tab","label","key","fontWeight","Paramters","console","log","innerHeight","isPausing","setIsPausing","arrayInput","setArrayInput","startElement","onClick","className","order","paddingTop","pauseElement","resetElement","disabledPauseElement","getProgressButton","Slider","defaultValue","step","marks","min","alignSelf","Button","randomArray","Array","from","getRandomArray","TextField","arrayString","replaceAll","string","split","filter","v","arrayDataChangeHandler","size","margin","ArrayHolder","styled","div","ArrayItem","subscribe","Source","props","distance","keyframes","Destination","ArrayContainer","source","destination","highlightIndices","sortedIndices","getBackgroundColor","includes","InfoFlex","InfoFooter","swapCount","comparisionCount","children","Timer","isAlgoExecutionOver","minutes","setMinutes","seconds","setSeconds","milliSeconds","setMilliSeconds","intervalId","setInterval","ml","clearInterval","toString","padStart","cTime","sTime","Container","Card","AlgoHeaderBar","TimerDiv","SortManager","memo","sortFunction","sortingAlgorithmName","swapIndices","setSwapIndices","hightlightedIndices","setHightlightedIndices","algoArray","useRef","isComponentUnMounted","sortProgressIterator","reset","current","completion","done","next","tmp","indices","p","runAlgo","arrayContainer","FlexWrap","TabPanel","other","role","hidden","maxWidth","SortingSpace","flexDirection","alignItems","alignContent","algoInfo","Visualizer","textAlign","overflowX","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c9269ae3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Welcome.css\";\n\nconst headerStyles = {\n  fontSize: \"clamp(2rem, 10vw, 8rem)\",\n  position: \"relative\",\n  fontFamily: \"system-ui, serif\",\n  width: \"max-content\",\n  color: \"rgb(41, 41, 41)\",\n};\n\nconst delay = 3.1;\nexport default function App() {\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    let timer1 = setTimeout(() => setShow(true), delay * 1000);\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, []);\n\n  return show ? (\n    <React.Fragment></React.Fragment>\n  ) : (\n    <React.Fragment>\n      <h1 style={headerStyles}>\n        Welcome to <br /> SortingVisualizer\n      </h1>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n  const topNavStyles = {\n    top: \"0\",\n    left: \"0\",\n    right: \"0\",\n    marginTop: \"-0.3em\",\n    position: \"absolute\",\n    display: \"flex\",\n    width: \"100vw\",\n  };\n\n  return (\n    <nav id=\"TopNav\" style={topNavStyles}>\n      <a href=\"http://localhost:3000/\" id=\"Sorting\">\n        SortingVisualizer\n      </a>\n      <div id=\"empty\"></div>\n      <a\n        href=\"https://github.com/sayihhamza/SortingVisualizer\"\n        target=\"_blank\"\n        id=\"Github\"\n        rel=\"noreferrer\"\n      >\n        GithubRepository\n      </a>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Footer.css\";\nexport default function Footer() {\n  const footerStyles = {\n    bottom: \"0rem\",\n    position: \"absolute\",\n    display: \"inline-flex\",\n    marginBottom: \"1em\",\n    marginLeft: \"-5em\",\n  };\n  return (\n    <footer style={footerStyles}>\n      Made by&nbsp;\n      <a href=\"https://github.com/sayihhamza\" target=\"_blank\">\n        Sayih hamza\n      </a>\n    </footer>\n  );\n}\n","export function convertInputToArrayString(string) {\n  string = string.replaceAll(/\\s/g, \"\");\n  string = string.replaceAll(/\\d{3}/g, \"\");\n  string = string.replaceAll(/\\s\\s/g, \" \");\n  string = string.replaceAll(/\\s,/g, \",\");\n  string = string.replaceAll(/,,/g, \",\");\n  string = string.replaceAll(/[^0-9,\\s]/g, \"\");\n  return string;\n}\n\nexport function convertArrayStringToArray(string) {\n  return string\n    .split(\",\")\n    .filter((v) => v !== \"\")\n    .map((v) => +v);\n}\n\nexport function getRandomArray(length = generateRandomNumberInRange(5, 6)) {\n  return Array.from(new Array(length), () => generateRandomNumberInRange());\n}\n\nexport function getScreenWidth() {\n  return window.innerWidth;\n}\n\nexport function delay(time) {\n  return new Promise((resolve) => setTimeout(resolve, time));\n}\n\nfunction generateRandomNumberInRange(lowerLimit = 1, upperLimit = 99) {\n  return lowerLimit + Math.floor(Math.random() * upperLimit);\n}\n","export async function* BubbleSort(array, swap, highlight, marksort) {\n  for (let i = 0; i < array.length; i++) {\n    for (var j = 0; j < array.length - i - 1; j++) {\n      yield await highlight([j, j + 1]);\n\n      if (array[j] > array[j + 1]) {\n        yield await swap(j, j + 1);\n      }\n    }\n\n    marksort(j);\n    yield;\n  }\n}\n","export async function* SelectionSort(array, swap, highlight, marksort) {\n  for (let i = 0; i < array.length; i++) {\n    let maxIndex = 0;\n    for (var j = 0; j < array.length - i; j++) {\n      yield await highlight([maxIndex, j]);\n\n      if (array[maxIndex] < array[j]) {\n        maxIndex = j;\n      }\n    }\n\n    j = j - 1;\n    if (maxIndex !== j && array[maxIndex] !== array[j]) {\n      yield await swap(maxIndex, j);\n    }\n\n    marksort(j);\n    yield;\n  }\n}\n","export async function* InsertionSort(array, swap, highlight, marksort) {\n  for (let i = 0; i < array.length; i++) {\n    let keyIndex = i;\n    for (var j = i - 1; j >= 0; j--) {\n      yield await highlight([keyIndex, j]);\n\n      if (array[j] > array[keyIndex]) {\n        yield await swap(j, keyIndex);\n        keyIndex = j;\n      } else {\n        yield;\n        break;\n      }\n    }\n\n    marksort(i);\n    yield;\n  }\n}\n","export async function* QuickSort(\n  array,\n  swap,\n  highlight,\n  markSort,\n  low = 0,\n  high = array.length - 1\n) {\n\n  if (low <= high) {\n    let pivot = yield* await partition(array, low, high);\n    yield* await QuickSort(array, swap, highlight, markSort, low, pivot - 1);\n    yield* await QuickSort(array, swap, highlight, markSort, pivot + 1, high);\n  }\n\n  async function* partition(array, low, high) {\n    let pivot = low;\n    let i = low;\n    let j = high + 1;\n\n    while (i < j) {\n\n      while (--j > low) {\n        yield await highlight([i, j], pivot);\n        if (array[j] < array[pivot]) {\n          break;\n        }\n      }\n\n      while (i <= high && i < j) {\n        yield await highlight([i], pivot);\n        if (array[++i] > array[pivot]) {\n          break;\n        }\n      }\n\n      if (i < j) {\n        yield await swap(i, j);\n      }\n    }\n\n    if (pivot !== j) {\n      yield await swap(pivot, j);\n    }\n\n    markSort(j);\n    yield;\n    return j;\n  }\n}\n","export async function* HeapSort(array, swap, highlight, markSort) {\n  let arrLength = array.length;\n  for (let i = Math.floor(arrLength / 2) - 1; i >= 0; i--) {\n    yield* await maxHeap(i);\n  }\n\n  for (let i = array.length - 1; i > 0; i--) {\n    arrLength--;\n    markSort(arrLength);\n    yield await swap(0, i);\n    yield* await maxHeap(0);\n  }\n\n  markSort(0);\n\n  async function* maxHeap(i) {\n    const left = 2 * i + 1;\n    const right = 2 * i + 2;\n    let max = i;\n\n    const highlightArray = [];\n    if(left < arrLength)\n      highlightArray.push(left);\n    if(right < arrLength)\n      highlightArray.push(right);\n    yield await highlight(highlightArray, i);\n\n    if(left < arrLength){\n      if (array[left] > array[max]) {\n        max = left;\n      }\n    }\n\n    if(right < arrLength){\n      if (array[right] > array[max]) {\n        max = right;\n      }\n    }\n\n    if (max !== i) {\n      yield await swap(i, max);\n      yield* await maxHeap(max);\n    }\n  }\n}\n","export async function* MergeSort(\n  array,\n  combine,\n  highlight,\n  markSort,\n  offSet = 0,\n  finalMerge = true\n) {\n  if (array.length === 1) {\n    if(finalMerge)\n      markSort(0);\n    return array;\n  }\n\n  const middle = Math.floor(array.length / 2);\n  const left = array.slice(0, middle);\n  const right = array.slice(middle);\n\n  const arr = yield* await merge(\n    yield* await MergeSort(left, combine, highlight, markSort, offSet, false),\n    yield* await MergeSort(right, combine, highlight, markSort, offSet + middle, false),\n    offSet,\n    offSet + middle,\n    finalMerge,\n    markSort\n  );\n  return arr;\n\n  async function* merge(left, right, off1, off2, finalMerge = false, markSort) {\n    let result = [];\n    let leftIndex = 0;\n    let rightIndex = 0;\n\n    while (leftIndex < left.length && rightIndex < right.length) {\n      if (left[leftIndex] <= right[rightIndex]) {\n        yield await highlight([off1 + leftIndex + rightIndex, off2 + rightIndex]);\n        yield await combine(\n          off1 + leftIndex + rightIndex,\n          off1 + result.length,\n        );\n        if(finalMerge)\n          yield await markSort(off1 + result.length);\n        result.push(left[leftIndex]);\n        leftIndex++;\n      } else {\n        yield await highlight([off1 + leftIndex + rightIndex, off2 + rightIndex]);\n        yield await combine(off2 + rightIndex, off1 + result.length);\n        if(finalMerge)\n          yield await markSort(off1 + result.length);\n        result.push(right[rightIndex]);\n        rightIndex++;\n      }\n    }\n\n    while (leftIndex < left.length) {\n      yield await highlight([off1 + leftIndex + rightIndex]);\n      if(finalMerge)\n        yield await markSort(off1 + leftIndex + rightIndex);\n      result.push(left[leftIndex]);\n      leftIndex++;\n    }\n\n    while (rightIndex < right.length) {\n      yield await highlight([off1 + leftIndex + rightIndex]);\n      if(finalMerge)\n        yield await markSort(off1 + leftIndex + rightIndex);\n      result.push(right[rightIndex]);\n      rightIndex++;\n    }\n\n    return result;\n  }\n}\n","import { getScreenWidth } from \"./helper\";\nimport { BubbleSort } from \"../sortingAlgorithms/BubbleSort\";\nimport { SelectionSort } from \"../sortingAlgorithms/SelectionSort\";\nimport { InsertionSort } from \"../sortingAlgorithms/InsertionSort\";\nimport { QuickSort } from \"../sortingAlgorithms/QuickSort\";\nimport { HeapSort } from \"../sortingAlgorithms/HeapSort\";\nimport { MergeSort } from \"../sortingAlgorithms/MergeSort\";\n\n// colors setting\nexport const comparisionColor = \"#99CCFF\";\nexport const swapColor = \"#FFFF66\";\nexport const sortedColor = \"#99FF99\";\nexport const pivotColor = \"#FF6666\";\n\n// time setting\nexport let swapTime = 1000;\nexport let compareTime = 500;\n\n// init array\nexport let sortingArray = () => {\n  const screenSize = getScreenWidth();\n  if (screenSize < 460) return [];\n  return [];\n};\n\nexport const sortingAlgorithms = [\n  { component: QuickSort, title: \"Quick\", name: \"QuickSort\" },\n  { component: InsertionSort, title: \"Insertion\", name: \"InsertionSort\" },\n  { component: SelectionSort, title: \"Selection\", name: \"SelectionSort\" },\n  { component: BubbleSort, title: \"Bubble\", name: \"BubbleSort\" },\n  { component: MergeSort, title: \"Merge\", name: \"MergeSort\" },\n  { component: HeapSort, title: \"Heap\", name: \"HeapSort\" },\n];\n","import create from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport {\n  sortingArray,\n  compareTime,\n  swapTime,\n  sortingAlgorithms,\n} from \"./config\";\n\nexport const useControls = create(\n  devtools((set) => ({\n    progress: \"reset\",\n    speed: 3,\n    compareTime: compareTime,\n    swapTime: swapTime,\n    doneCount: 0,\n    startSorting: () => set({ progress: \"start\" }),\n    pauseSorting: () => set({ progress: \"pause\" }),\n    resetSorting: () => set({ progress: \"reset\", doneCount: 0 }),\n    markSortngDone: () =>\n      set((state) => {\n        if (useData.getState().algorithm === sortingAlgorithms.length) {\n          if (state.doneCount === sortingAlgorithms.length - 1)\n            return { doneCount: 0, progress: \"done\" };\n          else return { doneCount: state.doneCount + 1 };\n        } else return { progress: \"done\" };\n      }),\n    setSpeed: (speed) =>\n      set(() => {\n        return { swapTime: 3000 / speed, compareTime: 1500 / speed, speed };\n      }),\n  }))\n);\nexport const useData = create(\n  devtools((set) => ({\n    algorithm: 0,\n    sortingArray: sortingArray,\n    setSortingArray: (array) => set({ sortingArray: array }),\n    setAlgorithm: (idx) => set({ algorithm: idx }),\n  }))\n);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { sortingAlgorithms } from \"../../../supportFiles/config\";\nimport { useData } from \"../../../supportFiles/store\";\nimport shallow from \"zustand/shallow\";\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst NavStyles = {\n  position: \"absolute\",\n  width: \"100vw\",\n  left: \"0\",\n  right: \"0\",\n  backgroundColor: \"rgb(211, 211, 211)\",\n  display: \"inline-flex\",\n  overflow: \"auto\",\n  marginBottom: \"0\",\n  paddingBottom: \"0\",\n};\n\nconst AlgoNavbar = () => {\n  const topNav = document.getElementById(\"TopNav\");\n  const [top, setTop] = React.useState(topNav.offsetHeight);\n  const classes = useStyles();\n  const [algorithm, setAlgorithm] = useData(\n    (state) => [state.algorithm, state.setAlgorithm],\n    shallow\n  );\n\n  window.addEventListener(\"resize\", () => {\n    setTop(topNav.offsetHeight);\n  });\n\n  return (\n    <div>\n      <nav id=\"AlgoNavbar\" color=\"grey\" style={NavStyles}>\n        <AppBar position=\"static\" color=\"grey\">\n          <Tabs\n            value={algorithm}\n            onChange={(event, id) => setAlgorithm(id)}\n            indicatorColor=\"rgb(24, 24, 24)\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n            style={{\n              backgroundColor: \"rgb(211, 211, 211)\",\n              display: \"inline-flex\",\n              justifyContent: \"center\",\n              height: \"3vh\",\n            }}\n          >\n            {sortingAlgorithms.map((algorithm) => (\n              <Tab\n                label={algorithm.title}\n                {...a11yProps(0)}\n                key={algorithm.title}\n                style={{\n                  flexGrow: \"1\",\n                  fontWeight: \"900\",\n                  fontSize: \"1.3em\",\n                  color: \"rgb(27, 27, 27)\",\n                }}\n              />\n            ))}\n            <Tab\n              label=\"All\"\n              {...a11yProps(6)}\n              style={{\n                flexGrow: \"1\",\n                fontWeight: \"900\",\n                fontSize: \"1.3em\",\n                color: \"rgb(27, 27, 27)\",\n              }}\n            />\n          </Tabs>\n        </AppBar>\n      </nav>\n    </div>\n  );\n};\n\nexport default AlgoNavbar;\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./Paramters.css\";\n\nimport { delay } from \"../../../supportFiles/helper\";\n\nimport shallow from \"zustand/shallow\";\nimport { useControls, useData } from \"../../../supportFiles/store\";\nimport {\n  convertInputToArrayString,\n  convertArrayStringToArray,\n  getRandomArray,\n} from \"../../../supportFiles/helper\";\n\nimport { VscDebugStart } from \"react-icons/vsc\";\nimport { VscDebugRestart } from \"react-icons/vsc\";\nimport { ImPause } from \"react-icons/im\";\n\n// const startElement = <VscDebugStart />;\n// const pauseElement = <ImPause />;\n// const resetElement = <VscDebugRestart />;\n// const disabledPauseElement = <ImPause style={{ color: \"#e5e5e5\" }} />;\n\nconst Paramters = () => {\n  window.addEventListener(\"resize\", () => {\n    console.log(\"width : \" + window.innerWidth);\n    console.log(\"height : \" + window.innerHeight);\n  });\n  const [isPausing, setIsPausing] = useState(false);\n  const [progress, speed] = useControls(\n    (state) => [state.progress, state.speed],\n    shallow\n  );\n\n  const [sortingArray, setSortingArray] = useData(\n    (state) => [state.sortingArray, state.setSortingArray],\n    shallow\n  );\n\n  const [startSorting, pauseSorting, resetSorting, setSpeed] = useControls(\n    (state) => [\n      state.startSorting,\n      state.pauseSorting,\n      state.resetSorting,\n      state.setSpeed,\n    ],\n    shallow\n  );\n\n  const [arrayInput, setArrayInput] = useState(sortingArray);\n\n  const startElement = (\n    <VscDebugStart\n      onClick={startSorting}\n      className=\"icns\"\n      style={{\n        height: \"6vh\",\n        width: \"6vw\",\n        left: \"0\",\n        order: \"0\",\n        paddingTop: \"0.3em\",\n      }}\n    />\n  );\n  const pauseElement = (\n    <ImPause\n      onClick={pauseAndDelaySorting}\n      className=\"icns\"\n      style={{\n        height: \"6vh\",\n        width: \"6vw\",\n        left: \"0\",\n        order: \"0\",\n        paddingTop: \"0.3em\",\n      }}\n    />\n  );\n  const resetElement = (\n    <VscDebugRestart\n      onClick={resetSorting}\n      className=\"icns\"\n      style={{\n        height: \"6vh\",\n        width: \"6vw\",\n        left: \"0\",\n        order: \"0\",\n        paddingTop: \"0.3em\",\n      }}\n    />\n  );\n  const disabledPauseElement = (\n    <ImPause\n      className=\"icns\"\n      style={{\n        color: \"rgb(100, 100, 100)\",\n        height: \"6vh\",\n        width: \"6vw\",\n        left: \"0\",\n        order: \"0\",\n        paddingTop: \"0.3em\",\n      }}\n    />\n  );\n\n  async function pauseAndDelaySorting() {\n    pauseSorting();\n    setIsPausing(true);\n    await delay(useControls.getState().swapTime);\n    setIsPausing(false);\n  }\n\n  function arrayDataChangeHandler(value) {\n    const arrayString = convertInputToArrayString(value);\n    setArrayInput(arrayString);\n\n    const array = convertArrayStringToArray(arrayString);\n    setSortingArray(array);\n    resetSorting();\n  }\n\n  function generate() {\n    const randomArray = getRandomArray();\n    setArrayInput(randomArray);\n    setSortingArray(randomArray);\n    resetSorting();\n  }\n\n  function getProgressButton() {\n    if (isPausing) return disabledPauseElement;\n\n    switch (progress) {\n      case \"reset\":\n        return startElement;\n      case \"start\":\n        return pauseElement;\n      case \"pause\":\n        return startElement;\n      case \"done\":\n        return disabledPauseElement;\n      default:\n        return \"\";\n    }\n  }\n  return (\n    <div id=\"Parent\">\n      <div id=\"Element1\" style={{ display: \"flex\" }}>\n        {getProgressButton()}\n        {resetElement}\n        <Slider\n          key={`slider-${speed}`}\n          defaultValue={speed}\n          onChange={(event, value) => setSpeed(value)}\n          id=\"Slider\"\n          aria-labelledby=\"discrete-slider\"\n          step={1}\n          marks\n          min={1}\n          max={10}\n          style={{\n            order: \"2\",\n            width: \"70%\",\n            alignSelf: \"center\",\n            marginLeft: \"0.5em\",\n            paddingTop: \"0.8em\",\n            color: \"rgb(24, 24, 24)\",\n          }}\n        ></Slider>\n      </div>\n      <div id=\"Element2\" style={{ display: \"flex\" }}>\n        <Button\n          id=\"Generate\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={generate}\n          style={{\n            order: \"3\",\n            marginLeft: \"2em\",\n            height: \"3em\",\n            backgroundColor: \"rgb(24, 24, 24)\",\n          }}\n        >\n          Generate\n        </Button>\n        <TextField\n          id=\"outlined-basic\"\n          onChange={(event) => arrayDataChangeHandler(event.target.value)}\n          value={arrayInput}\n          label=\"Input\"\n          variant=\"outlined\"\n          size=\"small\"\n          style={{ margin: \"0 10px\", order: \"4\", width: \"70%\" }}\n        ></TextField>\n      </div>\n    </div>\n  );\n};\n\nexport default Paramters;\n","import styled, { keyframes } from \"styled-components\";\n\nexport const ArrayHolder = styled.div`\n  display: flex;\n  height: 175px;\n  align-items: center;\n  padding: 15px;\n  overflow: auto;\n`;\n\nexport const ArrayItem = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid black;\n  width: 50px;\n  height: 50px;\n  box-shadow: 0 5px 30px 0 rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  flex-shrink: 0;\n`;\n\nexport const swapAnimation = (distance, swapColor) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  10%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  30% {\n    transform: translate(0px, -50px);\n    background-color: ${swapColor};\n  }\n  70% {\n    transform: translate(-${distance * 50}px, -50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(-${distance * 50}px, 0px);\n  }\n`;\n\nexport const moveAnimation = () => keyframes`\n  0%{\n    transform: translate(0px, 0px);\n  }\n  100%{\n    transform: translate(50px, 0px);\n  }\n`;\n\nexport const destinationAnimation = (distance, swapColor) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  40%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  60% {\n    transform: translate(0px, 50px);\n    background-color: ${swapColor};\n  }\n  80% {\n    transform: translate(-${distance * 50}px, 50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: none;\n  }\n`;\n\nexport const sourceAnimation = (distance, swapColor) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  40%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  60% {\n    transform: translate(0px, -50px);\n    background-color: ${swapColor};\n  }\n  80% {\n    transform: translate(${distance * 50}px, -50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(${distance * 50}px, 0px);\n    background-color: none;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  comparisionColor,\n  swapColor,\n  sortedColor,\n  pivotColor,\n} from \"../../../../supportFiles/config\";\nimport { useControls } from \"../../../../supportFiles/store\";\n\nimport {\n  ArrayHolder,\n  ArrayItem,\n  sourceAnimation,\n  destinationAnimation,\n} from \"../../../../supportFiles/styles\";\n\nlet swapTime = useControls.getState().swapTime;\nuseControls.subscribe(\n  (time) => (swapTime = time),\n  (state) => state.swapTime\n);\n\nconst Source = styled(ArrayItem)`\n  animation: ${(props) => destinationAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nconst Destination = styled(ArrayItem)`\n  animation: ${(props) => sourceAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nexport function ArrayContainer({\n  array,\n  source,\n  destination,\n  pivot = -1,\n  highlightIndices,\n  sortedIndices,\n}) {\n  function getBackgroundColor(i) {\n    if (i === pivot) {\n      return pivotColor;\n    }\n\n    if (highlightIndices.includes(i)) {\n      return comparisionColor;\n    }\n\n    if (sortedIndices.includes(i)) {\n      return sortedColor;\n    }\n    return \"\";\n  }\n\n  return (\n    <ArrayHolder>\n      {array.map((value, i) => {\n        if (i === source) {\n          return (\n            <Source\n              key={i + \":\" + source + \":\" + destination + \":\" + value}\n              distance={destination - source}\n              style={{\n                order: destination,\n                backgroundColor: getBackgroundColor(i),\n                fontSize: \"1.5em\",\n                height: \"10vh\",\n              }}\n            >\n              <strong>{value}</strong>\n            </Source>\n          );\n        }\n        if (i === destination) {\n          return (\n            <Destination\n              key={i + \":\" + destination + \":\" + source + \":\" + value}\n              distance={destination - source}\n              style={{\n                order: source,\n                backgroundColor: getBackgroundColor(i),\n                fontSize: \"1.5em\",\n                height: \"10vh\",\n              }}\n            >\n              <strong>{value}</strong>\n            </Destination>\n          );\n        }\n        return (\n          <ArrayItem\n            key={i + \":\" + destination + \":\" + source + \":\" + value}\n            style={{\n              order: i,\n              backgroundColor: getBackgroundColor(i),\n              fontSize: \"1.5em\",\n              height: \"10vh\",\n            }}\n          >\n            <strong>{value}</strong>\n          </ArrayItem>\n        );\n      })}\n    </ArrayHolder>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  comparisionColor,\n  swapColor,\n  sortedColor,\n} from \"../../../../supportFiles/config\";\nimport {\n  ArrayHolder,\n  ArrayItem,\n  swapAnimation,\n  moveAnimation,\n} from \"../../../../supportFiles/styles\";\nimport { useControls } from \"../../../../supportFiles/store\";\n\nlet swapTime = useControls.getState().swapTime;\nuseControls.subscribe(\n  (time) => (swapTime = time),\n  (state) => state.swapTime\n);\n\nconst AnimatedItem = styled(ArrayItem)`\n  animation: ${(props) => swapAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nconst MoveItem = styled(ArrayItem)`\n  animation: ${moveAnimation()} ${() => swapTime / 1000}s forwards;\n`;\n\nconst generateItems = (setItems, source, destination) => {\n  setItems((items) => {\n    const newItems = [...items];\n\n    const temp = newItems[source];\n    for (let i = source; i > destination; i--) {\n      newItems[i] = newItems[i - 1];\n    }\n\n    newItems[destination] = temp;\n    return newItems;\n  });\n};\n\nexport function MergeContainer({\n  array,\n  source,\n  destination,\n  hightlightedIndices,\n  sortedIndices,\n}) {\n  const [items, setItems] = useState([...array]);\n\n  useEffect(() => {\n    if (source !== -1 && destination !== -1) {\n      generateItems(setItems, source, destination);\n    }\n  }, [source, destination]);\n\n  useEffect(() => {\n    setItems([...array]);\n  }, [array]);\n\n  function getBackgroundColor(i) {\n    if (sortedIndices.includes(i)) {\n      return sortedColor;\n    }\n\n    if (hightlightedIndices.includes(i)) {\n      return comparisionColor;\n    }\n\n    return \"\";\n  }\n\n  return (\n    <>\n      <ArrayHolder>\n        {items.map((value, i) => {\n          if (i === destination) {\n            return (\n              <AnimatedItem\n                key={i + \":\" + value}\n                style={{\n                  order: source + 1,\n                  backgroundColor: getBackgroundColor(i),\n                  borderRadius: \"2px\",\n                  fontSize: \"1.5em\",\n                  height: \"10vh\",\n                }}\n                distance={source - destination}\n              >\n                <strong>{value}</strong>\n              </AnimatedItem>\n            );\n          } else if (i > destination && i <= source) {\n            return (\n              <MoveItem\n                key={i + \":\" + value}\n                style={{\n                  order: i,\n                  backgroundColor: getBackgroundColor(i),\n                  transform: \"translate(50px)\",\n                  fontSize: \"1.5em\",\n                  height: \"10vh\",\n                }}\n              >\n                <strong>{value}</strong>\n              </MoveItem>\n            );\n          } else {\n            return (\n              <ArrayItem\n                key={i + \":\" + value}\n                style={{\n                  order: i,\n                  backgroundColor: getBackgroundColor(i),\n                  fontSize: \"1.5em\",\n                  height: \"10vh\",\n                }}\n              >\n                <strong>{value}</strong>\n              </ArrayItem>\n            );\n          }\n        })}\n      </ArrayHolder>\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InfoFlex = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport function InfoFooter({ swapCount, comparisionCount, children }) {\n  return (\n    <InfoFlex>\n      <div>\n        Swaps: <strong>{swapCount}</strong>\n      </div>\n      <div>\n        Comparisions: <strong>{comparisionCount}</strong>\n      </div>\n    </InfoFlex>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useControls } from \"../../../../supportFiles/store\";\n\nexport function Timer({ isAlgoExecutionOver }) {\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [milliSeconds, setMilliSeconds] = useState(0);\n\n  const progress = useControls((state) => state.progress);\n\n  function resetTimer() {\n    setMilliSeconds(0);\n    setSeconds(0);\n    setMinutes(0);\n  }\n\n  useEffect(() => {\n    if (isAlgoExecutionOver) return;\n    if (progress === \"start\")\n      var intervalId = setInterval(() => setMilliSeconds((ml) => ml + 1), 100);\n    else if (progress === \"reset\") resetTimer();\n    return () => clearInterval(intervalId);\n  }, [progress, isAlgoExecutionOver]);\n\n  useEffect(() => {\n    if (milliSeconds === 10) {\n      setSeconds((seconds) => seconds + 1);\n      setMilliSeconds(0);\n    }\n  }, [milliSeconds]);\n\n  useEffect(() => {\n    if (seconds === 60) {\n      setMinutes((minutes) => minutes + 1);\n      setSeconds(0);\n    }\n  }, [seconds]);\n\n  return `${minutes.toString().padStart(2, 0)}:${seconds\n    .toString()\n    .padStart(2, 0)}:${milliSeconds} s`;\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ArrayContainer } from \"./ArrayContainer\";\nimport { MergeContainer } from \"./MergeContainer\";\nimport { InfoFooter } from \"./InfoFooter\";\nimport { Timer } from \"./Timer\";\nimport Card from \"@material-ui/core/Card\";\nimport { delay } from \"../../../../supportFiles/helper\";\nimport shallow from \"zustand/shallow\";\nimport { useControls, useData } from \"../../../../supportFiles/store\";\n\nlet compareTime = useControls.getState().compareTime;\nlet swapTime = useControls.getState().swapTime;\n\nuseControls.subscribe(\n  ([cTime, sTime]) => {\n    compareTime = cTime;\n    swapTime = sTime;\n  },\n  (state) => [state.compareTime, state.swapTime],\n  shallow\n);\n\nconst Container = styled(Card)`\n  padding: 10px;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n`;\n\nconst AlgoHeaderBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 20px;\n`;\n\nconst TimerDiv = styled.div`\n  display: flex;\n  column-gap: 5px;\n  min-width: 8rem;\n  justify-content: flex-end;\n`;\n\nexport const SortManager = React.memo(function ({\n  array,\n  sortFunction,\n  sortingAlgorithmName,\n}) {\n  const [swapIndices, setSwapIndices] = useState([-1, -1]);\n  const [hightlightedIndices, setHightlightedIndices] = useState([-1, -1]);\n\n  const algoArray = useRef([]);\n  const sortedIndices = useRef([]);\n  const pivot = useRef(-1);\n  const swapCount = useRef(0);\n  const comparisionCount = useRef(0);\n  const isAlgoExecutionOver = useRef(false);\n  const isComponentUnMounted = useRef(false);\n\n  const markSortngDone = useControls((state) => state.markSortngDone);\n  const progress = useRef(\"\");\n  const sortProgressIterator = useRef(null);\n\n  async function reset() {\n    algoArray.current = [...useData.getState().sortingArray];\n    sortedIndices.current = [];\n    pivot.current = -1;\n    swapCount.current = 0;\n    comparisionCount.current = 0;\n    isAlgoExecutionOver.current = false;\n    setSwapIndices([-1, -1]);\n    setHightlightedIndices([-1, -1]);\n\n    sortProgressIterator.current =\n      sortingAlgorithmName === \"MergeSort\"\n        ? await sortFunction(algoArray.current, combine, highlight, markSort)\n        : await sortFunction(algoArray.current, swap, highlight, markSort);\n  }\n\n  useEffect(() => {\n    progress.current = useControls.getState().progress;\n    useControls.subscribe(\n      (value) => {\n        progress.current = value;\n\n        if (progress.current === \"start\") runAlgo();\n        if (progress.current === \"reset\") reset();\n      },\n      (state) => state.progress\n    );\n\n    return () => {\n      isComponentUnMounted.current = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    reset();\n  }, [array]);\n\n  async function runAlgo() {\n    let completion = { done: false };\n    while (\n      !completion?.done &&\n      progress.current === \"start\" &&\n      !isComponentUnMounted.current\n    ) {\n      completion = await sortProgressIterator.current?.next();\n    }\n\n    if (isComponentUnMounted.current) {\n      return;\n    }\n\n    if (!isAlgoExecutionOver.current && completion?.done) {\n      isAlgoExecutionOver.current = true;\n      pivot.current = -1;\n      setSwapIndices([-1, -1]);\n      setHightlightedIndices([-1, -1]);\n      markSortngDone();\n    }\n  }\n\n  async function swap(i, j) {\n    let tmp = algoArray.current[i];\n    algoArray.current[i] = algoArray.current[j];\n    algoArray.current[j] = tmp;\n    setSwapIndices([i, j]);\n\n    pivot.current = -1;\n    swapCount.current += 1;\n    await delay(swapTime);\n  }\n\n  async function combine(source, destination) {\n    if (source !== destination) {\n      swapCount.current += 1;\n      setHightlightedIndices([-1, -1]);\n      setSwapIndices([source, destination]);\n      await delay(swapTime);\n    }\n  }\n\n  async function highlight(indices, p) {\n    setSwapIndices([-1, -1]);\n    comparisionCount.current += 1;\n    pivot.current = p;\n    setHightlightedIndices(indices);\n    await delay(compareTime);\n  }\n\n  function markSort(...indices) {\n    sortedIndices.current.push(...indices);\n  }\n\n  const mergeContainer = (\n    <MergeContainer\n      array={algoArray.current}\n      source={swapIndices[0]}\n      destination={swapIndices[1]}\n      hightlightedIndices={hightlightedIndices}\n      sortedIndices={sortedIndices.current}\n    />\n  );\n  const arrayContainer = (\n    <ArrayContainer\n      array={algoArray.current}\n      source={swapIndices[0]}\n      destination={swapIndices[1]}\n      pivot={pivot.current}\n      highlightIndices={hightlightedIndices}\n      sortedIndices={sortedIndices.current}\n    />\n  );\n\n  return (\n    <Container style={{ backgroundColor: \"gainsboro\", margin: \"0 !important\" }}>\n      <AlgoHeaderBar>\n        <strong>{sortingAlgorithmName}</strong>\n        <TimerDiv>\n          <span>Time:</span>\n          <strong>\n            <Timer isAlgoExecutionOver={isAlgoExecutionOver.current} />\n          </strong>\n        </TimerDiv>\n      </AlgoHeaderBar>\n      {arrayContainer}\n      <InfoFooter\n        swapCount={swapCount.current}\n        comparisionCount={comparisionCount.current}\n      ></InfoFooter>\n    </Container>\n  );\n});\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { sortingAlgorithms } from \"../../../supportFiles/config\";\nimport { useControls, useData } from \"../../../supportFiles/store\";\nimport shallow from \"zustand/shallow\";\nimport { SortManager } from \"./SortingFiles/SortManager\";\n\nconst FlexWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center !important;\n  max-width: 100%;\n  column-gap: 10px;\n  row-gap: 10px;\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n      style={{ maxWidth: \"100%\" }}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\nexport function SortingSpace() {\n  const resetSorting = useControls((state) => state.resetSorting);\n\n  const [sortingArray, algorithm] = useData(\n    (state) => [state.sortingArray, state.algorithm],\n    shallow\n  );\n\n  useEffect(() => {\n    resetSorting();\n  }, [algorithm, resetSorting]);\n\n  if (sortingArray.length === 0)\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100vw\",\n        }}\n      >\n        <h2 style={{ justifyContent: \"center\" }}>\n          1) Please use the generate button or enter your custom input.\n        </h2>\n        <br />\n        <h2 style={{ justifyContent: \"center\" }}>\n          2) Then select one ( or all ) of the sorting algorithms listed above.\n        </h2>\n        <br />\n        <h2 style={{ justifyContent: \"center\" }}>\n          3) Click the start button to begin visualizing.\n        </h2>\n      </div>\n    );\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        flexDirection: \"column\",\n        width: \"100vw\",\n      }}\n    >\n      <div>\n        {sortingAlgorithms.map((algoInfo, idx) => (\n          <TabPanel value={algorithm} index={idx} key={algoInfo.name}>\n            <SortManager\n              array={sortingArray}\n              sortFunction={algoInfo.component}\n              sortingAlgorithmName={algoInfo.name}\n            />\n          </TabPanel>\n        ))}\n        <TabPanel value={algorithm} index={sortingAlgorithms.length}>\n          <FlexWrap>\n            {sortingAlgorithms.map((algoInfo) => (\n              <SortManager\n                array={sortingArray}\n                sortFunction={algoInfo.component}\n                sortingAlgorithmName={algoInfo.name}\n                key={algoInfo.name}\n              />\n            ))}\n          </FlexWrap>\n        </TabPanel>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport AlgoNavbar from \"./AlgoNavbar/AlgoNavbar\";\nimport Paramters from \"./Paramters/Paramters\";\nimport { SortingSpace } from \"./SortingSpace/SortingSpace\";\nimport \"./Visualizer.css\";\nconst delay = 3.3;\nexport default function Visualizer() {\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    let timer1 = setTimeout(() => setShow(true), delay * 1000);\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, []);\n  const VisualizerStyles = {\n    position: \"static\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"86vh\",\n  };\n  const ParamtersStyles = {\n    display: \"inline-flex\",\n    order: \"1\",\n    width: \"100vw\",\n    marginTop: \"clamp(3.9rem, 5vw, 4.2rem)\",\n    textAlign: \"center\",\n  };\n  const SortingSpaceStyles = {\n    order: \"2\",\n    width: \"100vw\",\n    height: \"80vh\",\n    position: \"relative\",\n    overflowX: \"hidden\",\n  };\n  return show ? (\n    <React.Fragment>\n      <div id=\"Visualizer\" style={VisualizerStyles}>\n        <AlgoNavbar />\n        <div style={ParamtersStyles}>\n          <Paramters />\n        </div>\n        <div style={SortingSpaceStyles}>\n          <SortingSpace />\n        </div>\n      </div>\n    </React.Fragment>\n  ) : (\n    <React.Fragment></React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Welcome from \"./components/Welcome/Welcome\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Visualizer from \"./components/Visualizer/Visualizer\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Visualizer />\n      <Welcome />\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}